name: Build and Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            GOOS: linux
            GOARCH: amd64
            output: gocurl-linux-amd64
          - os: macos-latest
            GOOS: darwin
            GOARCH: amd64
            output: gocurl-darwin-amd64
          - os: windows-latest
            GOOS: windows
            GOARCH: amd64
            output: gocurl-windows-amd64.exe

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        cache: true

    - name: Build
      run: |
        mkdir -p build
        go build -v -ldflags "-s -w" -o build/${{ matrix.output }} ./cmd/gocurl
      env:
        CGO_ENABLED: 0
        GOOS: ${{ matrix.GOOS }}
        GOARCH: ${{ matrix.GOARCH }}

    - name: Upload binary as artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.output }}
        path: ./build/${{ matrix.output }}
        retention-days: 7

  test:
    name: Test on Ubuntu
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        cache: true

    - name: Run tests
      run: make test

    - name: Run tests with coverage
      run: go test -v -race -coverprofile=coverage.out -covermode=atomic ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # Fetch all history for better linting context
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        cache: true

    # Run lint without failing the build on lint errors
    # This allows builds to complete even with style issues
    - name: Run linter (advisory)
      run: make lint
      continue-on-error: true
